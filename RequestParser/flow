
start line 파싱()
{
	std::string startline = getline();

	std::string request_target;

	vector<std::string> temp = split(" ");
	3개인지 확인
	method 변수 확인
		enum으로 저장하되
		(DELETE보다 길거나) GET, POST, DELETE가 아니면 501
	request target
		길이 확인. 최소 8000옥텟
		find(?)해서 이  지점을 기준으로 앞은 uri에 저장, 뒤는 querystring에 저장 substr()?
	protocol
		"HTTP/1.1"가 아니면 505
		저장
}

header 파싱()
{
	반복(빈 줄이 나올 때까지)
		맵에 헤더필드 한 줄을 key: value로 추가하는 함수 getpair()
		넣기 전 체크
			key 앞뒤 공백 체크
			맵에 이미 그런 key가 있는지 중복 체크 (content length는 중복도 가능하지만...)
		toupper()로 넣는다
	host check() :server 있는지 체크
		헤더필드가 없으면 400
		저장
			:기준으로 split()해서 저장
		find_server()
	transfer encoding check(map[tranfer encoding])
		,기준으로 split()해서 저장(길이가 0이면 저장하지 않음)
		0개일 때 || 1개이고 chunked
			ok, 저장
		나머지
			400
	content-length check()
		,기준으로 split()하여 저장
		첫 번째 값이 유효한지 check, 400
		나머지 값들이 첫번째 값과 같은지 check, throw 400
		넣는다
	cookie check()
		"; " 기준으로 split()
		= 기준으로 앞뒤를 저장 getpair()

}